version: 2

jobs:
  test-frontend:
    docker:
      - image: circleci/node:6.11.4
    steps:
      - checkout
      - run:
          name: install yarn
          command: 'sudo npm install -g yarn --quiet'

      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}

      - run:
          name: yarn install
          command: 'yarn install --pure-lockfile --no-progress'

      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: frontend tests
          command: './scripts/circle-test-frontend.sh'

  test-backend:
    docker:
      - image: circleci/golang:1.9.3
    working_directory: /go/src/github.com/grafana/grafana
    steps:
      - checkout
      - run:
          name: build backend and run go tests
          command: './scripts/circle-test-backend.sh'

  build:
    docker:
     - image: grafana/build-container:v0.1
    working_directory: /go/src/github.com/grafana/grafana
    steps:
      - checkout
      - run:
          name: build and package grafana
          command: './scripts/build/build.sh'
      - persist_to_workspace:
          root: dist
          paths:
            - grafana*

  deploy:
    docker:
     - image: grafana/build-container:v0.1
    working_directory: /go/src/github.com/grafana/grafana
    steps:
      - checkout
       - attach_workspace:
          at: dist
      - run:
          name: fake deploy
          command: 'ls -ltr dist'

workflows:
  version: 2
  test-and-build:
    jobs:
      - test-frontend
      - test-backend
      - build
      - deploy:
          requires:
            - test-frontend
            - test-backend
            - build
